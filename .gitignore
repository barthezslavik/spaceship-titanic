# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
PIPFILE.lock

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Machine Learning & Data Science
# Models
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
*.pb
*.pth
*.ckpt
*.model
*.weights

# Data files (ignore all CSV files first, then add exceptions)
*.csv
*.json
*.jsonl
*.parquet
*.feather
*.xlsx
*.xls
*.tsv
*.dat
*.data
*.sqlite
*.db
*.hdf

# But keep essential data files
!train.csv
!test.csv
!sample_submission.csv

# Datasets (large files)
data/
datasets/
raw_data/
processed_data/
input/
output/
results/

# Logs and outputs
logs/
outputs/
runs/
experiments/
mlruns/
wandb/
tensorboard_logs/

# Model artifacts
models/
checkpoints/
saved_models/
artifacts/

# Notebooks with outputs (keep clean versions)
*-checkpoint.ipynb
*_with_outputs.ipynb

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Configuration files with secrets
config.ini
.env.local
.env.production
secrets.json
credentials.json
*.key
*.pem

# Large files and binaries
*.zip
*.tar.gz
*.rar
*.7z
*.bin

# CatBoost specific files
catboost_info/
catboost_training.json

# Kaggle specific
submission_*.csv
*_submission.csv
kaggle.json

# But keep the final submissions for documentation
!strategic_business_intelligence_submission.csv
!final_elite_submission.csv
!fast_hybrid_submission.csv
!best_models_optimized_submission.csv

# Intermediate/working submissions (should be ignored)
submission.csv
quick_optimized_submission.csv
top3_optimized_submission.csv
top3_realistic_submission.csv

# Probability/intermediate files
*_probabilities.csv
chief_ds_probabilities.csv

# Visualization outputs
*.png
*.jpg
*.jpeg
*.svg
*.pdf

# But keep important documentation images
!spaceship_titanic_analysis.png
!plots/final_results/
!documentation_images/
!readme_assets/

# Cache directories
.cache/
cache/

# Profiling data
.prof

# Database files
*.sqlite3
*.db

# Virtual environments
anaconda/
miniconda/
.conda/

# Documentation build
docs/_build/
docs/build/
site/

# Project specific temporary files
experiments/
scratch/
playground/
test_outputs/
debug/

# Development/experimental Python files (keep only production-ready)
# Keep core solution files, ignore experimental ones
elite_95.py
elite_optimization.py
final_optimization.py
future_optimizations.py
hybrid_top7_solution.py
optimized_pipeline.py
summary_95_techniques.py
ultra_optimization.py

# Backup files
*.bak
*.backup
*_backup
*_old
*.orig

# Lock files
poetry.lock
Pipfile.lock
yarn.lock
package-lock.json

# Distribution folders
build/
dist/

# Local development
local/
dev/
development/

# API keys and tokens
.api_keys
token.txt
api_key.txt

# Docker
Dockerfile.dev
docker-compose.override.yml
.dockerignore

# Cloud provider configs (be careful with these)
.aws/
.gcp/
.azure/

# Machine learning experiment tracking
mlflow/
.mlflow/
sacred/

# Hyperparameter tuning
optuna_storage.db
hyperopt_trials.pkl

# Model serving
model_server_logs/
serving_logs/

# Data version control (DVC) - optional
.dvc/cache/
.dvcignore

# Streamlit
.streamlit/

# Gradio
flagged/

# FastAPI
__pycache__/
.pytest_cache/